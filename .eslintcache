[{"/Users/suhdonghwi/Documents/projects/fourier-playground/src/App.tsx":"1","/Users/suhdonghwi/Documents/projects/fourier-playground/src/fourier/coefficient.ts":"2","/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/Canvas.tsx":"3","/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/CircleList.tsx":"4","/Users/suhdonghwi/Documents/projects/fourier-playground/src/reportWebVitals.ts":"5","/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/ConfigGrid.tsx":"6"},{"size":2332,"mtime":1606698769160,"results":"7","hashOfConfig":"8"},{"size":794,"mtime":1606696629771,"results":"9","hashOfConfig":"8"},{"size":3057,"mtime":1606694845358,"results":"10","hashOfConfig":"8"},{"size":2834,"mtime":1606695568212,"results":"11","hashOfConfig":"8"},{"size":425,"mtime":1606619840926,"results":"12","hashOfConfig":"8"},{"size":892,"mtime":1606699437860,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1cy90l8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/suhdonghwi/Documents/projects/fourier-playground/src/App.tsx",["27","28"],"import React, { useState, useEffect } from \"react\";\nimport Canvas from \"./components/Canvas\";\n\nimport UnitCircle from \"./types/UnitCircle\";\nimport Point from \"./types/Point\";\nimport fourierCoefficient from \"./fourier/coefficient\";\n\nimport CircleList from \"./components/CircleList\";\nimport ConfigGrid, { Config } from \"./components/ConfigGrid\";\n\nfunction cleanPath(path: Point[]) {\n  let lastPoint = path[0];\n  const result = [lastPoint];\n\n  for (let i = 1; i < path.length; i++) {\n    if (Math.abs(path[i].x - lastPoint.x + (path[i].y - lastPoint.y)) > 0.5) {\n      result.push(path[i]);\n      lastPoint = path[i];\n    }\n  }\n\n  // closing curves\n  if (Math.abs(lastPoint.x - result[0].x + (lastPoint.y - result[0].y)) > 50) {\n    const deltaX = result[0].x - lastPoint.x,\n      deltaY = result[0].y - lastPoint.y;\n\n    for (let i = 1; i < 10; i++) {\n      result.push({\n        x: lastPoint.x + (deltaX / 10) * i,\n        y: lastPoint.y + (deltaY / 10) * i,\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction App() {\n  const [circleNum, setCircleNum] = useState(50);\n  const [isFirst, setIsFirst] = useState(true);\n  const [circles, setCircles] = useState<UnitCircle[]>([\n    { radius: 80, coefficient: 50, phi: 0 },\n  ]);\n  const [path, setPath] = useState<Point[]>([{ x: 0, y: 0 }]);\n\n  const [config, setConfig] = useState<Config>({ isGraphMode: false });\n\n  useEffect(() => {\n    console.log(\"what\");\n    if (isFirst) {\n      setIsFirst(false);\n    } else {\n      const coeffs = fourierCoefficient(path, circleNum);\n      const cs: UnitCircle[] = [];\n\n      let n = -circleNum;\n      for (const coeff of coeffs) {\n        const polar = coeff.toPolar();\n\n        cs.push({\n          radius: polar.r,\n          coefficient: n * Math.PI * 2,\n          phi: polar.phi,\n        });\n        n++;\n      }\n\n      setCircles(cs);\n    }\n  }, [circleNum, path]);\n\n  function onDrawFinish(drawing: Point[]) {\n    setPath(cleanPath(drawing));\n  }\n\n  return (\n    <div className=\"App\">\n      <Canvas\n        unitCircles={circles}\n        isGraphMode={config.isGraphMode}\n        onDrawFinish={onDrawFinish}\n      />\n      <div className=\"right\">\n        <CircleList value={circles} onChange={(c) => setCircles(c)} />\n        <ConfigGrid config={config} changeConfig={(c) => setConfig(c)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/suhdonghwi/Documents/projects/fourier-playground/src/fourier/coefficient.ts",[],"/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/Canvas.tsx",[],"/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/CircleList.tsx",[],"/Users/suhdonghwi/Documents/projects/fourier-playground/src/reportWebVitals.ts",[],"/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/ConfigGrid.tsx",[],{"ruleId":"29","severity":1,"message":"30","line":39,"column":21,"nodeType":"31","messageId":"32","endLine":39,"endColumn":33},{"ruleId":"33","severity":1,"message":"34","line":70,"column":6,"nodeType":"35","endLine":70,"endColumn":23,"suggestions":"36"},"@typescript-eslint/no-unused-vars","'setCircleNum' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isFirst'. Either include it or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [circleNum, isFirst, path]",{"range":"40","text":"41"},[1835,1852],"[circleNum, isFirst, path]"]