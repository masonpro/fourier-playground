[{"/Users/suhdonghwi/Documents/projects/fourier-playground/src/App.tsx":"1","/Users/suhdonghwi/Documents/projects/fourier-playground/src/fourier/coefficient.ts":"2","/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/Canvas.tsx":"3","/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/CircleList.tsx":"4"},{"size":2061,"mtime":1606668064613,"results":"5","hashOfConfig":"6"},{"size":753,"mtime":1606655440928,"results":"7","hashOfConfig":"6"},{"size":3056,"mtime":1606668350257,"results":"8","hashOfConfig":"6"},{"size":2506,"mtime":1606668263131,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1cy90l8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/suhdonghwi/Documents/projects/fourier-playground/src/App.tsx",["19","20"],"import React, { useState, useEffect } from \"react\";\nimport Canvas from \"./components/Canvas\";\n\nimport UnitCircle from \"./types/UnitCircle\";\nimport Point from \"./types/Point\";\nimport fourierCoefficient from \"./fourier/coefficient\";\n\nimport CircleList from \"./components/CircleList\";\n\nfunction cleanPath(path: Point[]) {\n  let lastPoint = path[0];\n  const result = [lastPoint];\n\n  for (let i = 1; i < path.length; i++) {\n    if (Math.abs(path[i].x - lastPoint.x + (path[i].y - lastPoint.y)) > 0.5) {\n      result.push(path[i]);\n      lastPoint = path[i];\n    }\n  }\n\n  // closing curves\n  if (Math.abs(lastPoint.x - result[0].x + (lastPoint.y - result[0].y)) > 50) {\n    const deltaX = result[0].x - lastPoint.x,\n      deltaY = result[0].y - lastPoint.y;\n\n    for (let i = 1; i < 10; i++) {\n      result.push({\n        x: lastPoint.x + (deltaX / 10) * i,\n        y: lastPoint.y + (deltaY / 10) * i,\n      });\n    }\n  }\n\n  return result;\n}\n\nfunction App() {\n  const [circleNum, setCircleNum] = useState(30);\n  const [isFirst, setIsFirst] = useState(true);\n  const [circles, setCircles] = useState<UnitCircle[]>([]);\n  const [path, setPath] = useState<Point[]>([{ x: 0, y: 0 }]);\n\n  useEffect(() => {\n    console.log(\"what\");\n    if (isFirst) {\n      setIsFirst(false);\n    } else {\n      const coeffs = fourierCoefficient(path, circleNum);\n      const cs: UnitCircle[] = [];\n\n      let n = -circleNum;\n      for (const coeff of coeffs) {\n        const polar = coeff.toPolar();\n\n        cs.push({\n          radius: polar.r,\n          coefficient: n * Math.PI * 2,\n          phi: polar.phi,\n        });\n        n++;\n      }\n\n      setCircles(cs);\n    }\n  }, [circleNum, path]);\n\n  function onDrawFinish(drawing: Point[]) {\n    setPath(cleanPath(drawing));\n  }\n\n  return (\n    <div className=\"App\">\n      <Canvas\n        unitCircles={circles}\n        isGraphMode={true}\n        onDrawFinish={onDrawFinish}\n      />\n      <div className=\"right\">\n        <CircleList value={circles} onChange={(c) => setCircles(c)} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/suhdonghwi/Documents/projects/fourier-playground/src/fourier/coefficient.ts",[],"/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/Canvas.tsx",[],"/Users/suhdonghwi/Documents/projects/fourier-playground/src/components/CircleList.tsx",[],{"ruleId":"21","severity":1,"message":"22","line":38,"column":21,"nodeType":"23","messageId":"24","endLine":38,"endColumn":33},{"ruleId":"25","severity":1,"message":"26","line":65,"column":6,"nodeType":"27","endLine":65,"endColumn":23,"suggestions":"28"},"@typescript-eslint/no-unused-vars","'setCircleNum' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isFirst'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [circleNum, isFirst, path]",{"range":"32","text":"33"},[1652,1669],"[circleNum, isFirst, path]"]